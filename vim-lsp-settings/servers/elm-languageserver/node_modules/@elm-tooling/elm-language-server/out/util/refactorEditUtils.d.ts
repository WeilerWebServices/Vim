import { TextEdit } from "vscode-languageserver";
import { SyntaxNode, Tree } from "web-tree-sitter";
export declare class RefactorEditUtils {
    static findLineNumberAfterCurrentFunction(nodeAtPosition: SyntaxNode): number | undefined;
    static unexposedValueInModule(tree: Tree, valueName: string): TextEdit | undefined;
    static createTopLevelFunction(insertLineNumber: number, valueName: string, typeString: string | undefined, valueExpression: SyntaxNode | undefined): TextEdit | undefined;
    private static argListFromArity;
    static exposeValueInModule(tree: Tree, valueName: string): TextEdit | undefined;
    static removeValueFromImport(tree: Tree, moduleName: string, valueName: string): TextEdit | undefined;
    static addImport(tree: Tree, moduleName: string, valueName?: string): TextEdit | undefined;
    static changeQualifiedReferenceModule(node: SyntaxNode, newModuleName: string): TextEdit | undefined;
    static removeQualifiedReference(node: SyntaxNode): TextEdit | undefined;
    static addImports(tree: Tree, importData: {
        moduleName: string;
        valueName?: string;
    }[]): TextEdit | undefined;
    static addModuleDeclaration(moduleName: string): TextEdit;
    static renameModuleDeclaration(tree: Tree, newModuleName: string): TextEdit | undefined;
    private static removeValueFromExposingList;
}
