import { TVar, Type } from "./typeInference";
export declare class TypeReplacement {
    private freshen;
    private keepRecordsMutable;
    private varsToRemainRigid?;
    private replacements;
    constructor(replacements: Map<TVar, Type>, freshen: boolean, keepRecordsMutable: boolean, varsToRemainRigid?: TVar[] | undefined);
    static replace(type: Type, replacements: Map<TVar, Type>, keepRecordsMutable?: boolean, varsToRemainRigid?: TVar[]): Type;
    static freshenVars(type: Type): Type;
    static flexify(type: Type): Type;
    static freeze(type: Type): void;
    private replace;
    private replaceAlias;
    private replaceTuple;
    private replaceFunction;
    private replaceUnion;
    private replaceRecord;
    private getReplacement;
}
