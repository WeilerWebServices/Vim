"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TypeCache = void 0;
const syntaxNodeMap_1 = require("./syntaxNodeMap");
class TypeCache {
    constructor() {
        this.packageTypeAnnotation = new syntaxNodeMap_1.SyntaxNodeMap();
        this.packageTypeAndTypeAlias = new syntaxNodeMap_1.SyntaxNodeMap();
        this.packageValueDeclaration = new syntaxNodeMap_1.SyntaxNodeMap();
        this.projectTypeAnnotation = new syntaxNodeMap_1.SyntaxNodeMap();
        this.projectTypeAndTypeAlias = new syntaxNodeMap_1.SyntaxNodeMap();
        this.projectValueDeclaration = new syntaxNodeMap_1.SyntaxNodeMap();
    }
    getOrSet(key, node, setter) {
        switch (key) {
            case "PACKAGE_TYPE_ANNOTATION":
                return this.packageTypeAnnotation.getOrSet(node, setter);
            case "PACKAGE_TYPE_AND_TYPE_ALIAS":
                return this.packageTypeAndTypeAlias.getOrSet(node, setter);
            case "PACKAGE_VALUE_DECLARATION":
                return this.packageValueDeclaration.getOrSet(node, setter);
            case "PROJECT_TYPE_ANNOTATION":
                return this.projectTypeAnnotation.getOrSet(node, setter);
            case "PROJECT_TYPE_AND_TYPE_ALIAS":
                return this.projectTypeAndTypeAlias.getOrSet(node, setter);
            case "PROJECT_VALUE_DECLARATION":
                return this.projectValueDeclaration.getOrSet(node, setter);
        }
    }
    invalidateProject() {
        this.projectTypeAnnotation.clear();
        this.projectTypeAndTypeAlias.clear();
        this.projectValueDeclaration.clear();
    }
    invalidateValueDeclaration(node) {
        this.projectValueDeclaration.delete(node);
    }
}
exports.TypeCache = TypeCache;
//# sourceMappingURL=typeCache.js.map