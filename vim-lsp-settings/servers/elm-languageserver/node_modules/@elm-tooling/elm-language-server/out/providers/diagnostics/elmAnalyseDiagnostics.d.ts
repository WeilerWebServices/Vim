import { ApplyWorkspaceEditResponse, CodeAction, CodeActionParams, Diagnostic, ExecuteCommandParams } from "vscode-languageserver";
import { URI } from "vscode-uri";
export declare const CODE_ACTION_ELM_ANALYSE: string;
export declare const CODE_ACTION_ELM_ANALYSE_FIX_ALL: string;
export interface IElmAnalyseEvents {
    on(event: "new-report", diagnostics: Map<string, Diagnostic[]>): this;
}
export declare class ElmAnalyseDiagnostics {
    private elmAnalysers;
    private diagnostics;
    private filesWithDiagnostics;
    private eventEmitter;
    private elmWorkspaceMatcher;
    private events;
    private connection;
    private settings;
    private formattingProvider;
    constructor();
    on(event: string | symbol, listener: (diagnostics: Map<string, Diagnostic[]>) => void): this;
    updateFile(uri: URI, text?: string): Promise<void>;
    onCodeAction(params: CodeActionParams): CodeAction[];
    onExecuteCommand(params: ExecuteCommandParams): Promise<ApplyWorkspaceEditResponse | undefined>;
    private fixableDiagnostics;
    /**
     * If a diagnosticId is provided it will fix the single issue, if no
     * id is provided it will fix the entire file.
     */
    private fixer;
    private getFixEdits;
    private createEdits;
    private setupElmAnalyse;
    private onNewReportForWorkspace;
    private isFixable;
    private messageToDiagnostic;
}
