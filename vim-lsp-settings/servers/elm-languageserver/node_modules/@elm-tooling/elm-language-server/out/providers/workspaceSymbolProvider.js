"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkspaceSymbolProvider = void 0;
const tsyringe_1 = require("tsyringe");
const symbolTranslator_1 = require("../util/symbolTranslator");
class WorkspaceSymbolProvider {
    constructor() {
        this.workspaceSymbolRequest = (param) => {
            this.connection.console.info(`Workspace Symbols were requested`);
            const symbolInformationMap = new Map();
            this.elmWorkspaces.forEach((elmWorkspace) => {
                elmWorkspace.getForest().treeIndex.forEach((tree) => {
                    const traverse = (node) => {
                        if (node.text.includes(param.query)) {
                            const symbolInformation = symbolTranslator_1.SymbolInformationTranslator.translateNodeToSymbolInformation(tree.uri, node);
                            if (symbolInformation) {
                                const current = symbolInformationMap.get(tree.uri) || [];
                                symbolInformationMap.set(tree.uri, [
                                    ...current,
                                    symbolInformation,
                                ]);
                            }
                        }
                        for (const childNode of node.children) {
                            traverse(childNode);
                        }
                    };
                    // skip URIs already traversed in a previous Elm workspace
                    if (tree && !symbolInformationMap.get(tree.uri)) {
                        traverse(tree.tree.rootNode);
                    }
                });
            });
            return Array.from(symbolInformationMap.values()).flat();
        };
        this.elmWorkspaces = tsyringe_1.container.resolve("ElmWorkspaces");
        this.connection = tsyringe_1.container.resolve("Connection");
        this.connection.onWorkspaceSymbol(this.workspaceSymbolRequest);
    }
}
exports.WorkspaceSymbolProvider = WorkspaceSymbolProvider;
//# sourceMappingURL=workspaceSymbolProvider.js.map