import { SyntaxNode, Tree } from "web-tree-sitter";
import { IForest } from "./forest";
import { NodeType } from "./util/treeUtils";
export interface IImport {
    alias: string;
    node: SyntaxNode;
    fromUri: string;
    fromModuleName: string;
    maintainerAndPackageName?: string;
    type: NodeType;
    explicitlyExposed: boolean;
}
export interface IImports {
    imports?: {
        [uri: string]: IImport[];
    };
    updateImports(uri: string, tree: Tree, forest: IForest): void;
}
export declare class Imports implements IImports {
    imports?: {
        [uri: string]: IImport[];
    };
    private parser;
    constructor();
    updateImports(uri: string, tree: Tree, forest: IForest): void;
    private getPrefixedCompletions;
    private getVirtualImports;
    private findImportAsClause;
    private getAllExposedCompletions;
    private exposedNodesToImports;
}
