import { URI } from "vscode-uri";
import { Forest } from "./forest";
import { Imports } from "./imports";
import { TypeCache } from "./util/types/typeCache";
export interface IElmWorkspace {
    init(progressCallback: (percent: number) => void): void;
    hasDocument(uri: URI): boolean;
    hasPath(uri: URI): boolean;
    getPath(uri: URI): string | undefined;
    getForest(): Forest;
    getImports(): Imports;
    getRootPath(): URI;
    getTypeCache(): TypeCache;
}
export declare class ElmWorkspace implements IElmWorkspace {
    private rootPath;
    private elmFolders;
    private forest;
    private imports;
    private parser;
    private connection;
    private settings;
    private typeCache;
    constructor(rootPath: URI);
    init(progressCallback: (percent: number) => void): Promise<void>;
    hasDocument(uri: URI): boolean;
    hasPath(uri: URI): boolean;
    getPath(uri: URI): string | undefined;
    getForest(): Forest;
    getImports(): Imports;
    getRootPath(): URI;
    getTypeCache(): TypeCache;
    private initWorkspace;
    private findElmFilesInFolders;
    private findElmFilesInFolder;
    private modulesToFilenames;
    private packageOrPackagesFolder;
    private findElmHome;
    private readAndAddToForest;
}
