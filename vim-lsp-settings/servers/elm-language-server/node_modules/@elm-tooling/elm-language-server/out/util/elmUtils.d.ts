import { ExecaReturnValue } from "execa";
import { IConnection, CompletionItemKind } from "vscode-languageserver";
import { URI } from "vscode-uri";
import { IClientSettings } from "./settings";
export declare const isWindows: boolean;
/** Options for execCmd */
export interface IExecCmdOptions {
    /** Any arguments */
    cmdArguments?: string[];
    /** Shows a message if an error occurs (in particular the command not being */
    showMessageOnError?: boolean;
    /** Text to add when command is not found (maybe helping how to install) */
    notFoundText?: string;
}
/** Executes a command. Shows an error message if the command isn't found */
export declare function execCmd(cmdFromUser: string, cmdStatic: string, options: IExecCmdOptions | undefined, cwd: string, connection: IConnection, input?: string): Promise<ExecaReturnValue<string>>;
export declare function isTestFile(filename: string, rootPath: string): boolean;
export declare function getEmptyTypes(): {
    markdown: string;
    name: string;
    symbolKind: CompletionItemKind;
}[];
export declare function getElmVersion(settings: IClientSettings, elmWorkspaceFolder: URI, connection: IConnection): Promise<string>;
export declare function findDepVersion(allVersionFolders: {
    version: string;
    versionPath: string;
}[], versionRange: string): {
    version: string;
    versionPath: string;
} | undefined;
