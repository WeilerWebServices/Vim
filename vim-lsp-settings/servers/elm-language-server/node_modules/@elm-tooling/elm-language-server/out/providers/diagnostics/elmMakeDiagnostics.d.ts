import { CodeAction, CodeActionParams, Diagnostic } from "vscode-languageserver";
import { URI } from "vscode-uri";
export declare const CODE_ACTION_ELM_MAKE: string;
export interface IElmCompilerError {
    type: string;
    errors: IError[];
}
export interface IElmError {
    title: string;
    type: string;
    path: string;
    message: (string | IStyledString)[];
}
export interface IError {
    path: string | null;
    name: string;
    problems: IProblem[];
}
export interface IProblem {
    title: string;
    region: {
        start: {
            line: number;
            column: number;
        };
        end: {
            line: number;
            column: number;
        };
    };
    message: (string | IStyledString)[];
}
export interface IStyledString {
    bold: boolean;
    underline: boolean;
    color: string;
    string: string;
}
export declare class ElmMakeDiagnostics {
    private elmWorkspaceMatcher;
    private neededImports;
    private settings;
    private connection;
    constructor();
    createDiagnostics: (filePath: URI) => Promise<Map<string, Diagnostic[]>>;
    onCodeAction(params: CodeActionParams): CodeAction[];
    private convertDiagnosticsToCodeActions;
    private addCaseQuickfixes;
    private createCaseQuickFix;
    private createQuickFix;
    private createImportQuickFix;
    private createImportAllQuickFix;
    private filterElmMakeDiagnostics;
    private checkForErrors;
}
