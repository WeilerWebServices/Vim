{"version":3,"file":"index.modern.js","sources":["../../src/index.ts"],"sourcesContent":["/**\n * A function that emits a side effect and does not return anything.\n */\nexport type Procedure = (...args: any[]) => void;\n\nexport type Options = {\n  isImmediate: boolean,\n}\n\nexport interface DebouncedFunction<F extends Procedure> {\n  (this: ThisParameterType<F>, ...args: Parameters<F>): void;\n  cancel: () => void;\n}\n\nexport function debounce<F extends Procedure>(\n  func: F,\n  waitMilliseconds = 50,\n  options: Options = {\n    isImmediate: false\n  },\n): DebouncedFunction<F> {\n  let timeoutId: ReturnType<typeof setTimeout> | undefined;\n\n  const debouncedFunction = function(this: ThisParameterType<F>, ...args: Parameters<F>) {\n    const context = this;\n\n    const doLater = function() {\n      timeoutId = undefined;\n      if (!options.isImmediate) {\n        func.apply(context, args);\n      }\n    }\n\n    const shouldCallNow = options.isImmediate && timeoutId === undefined;\n\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId);\n    }\n\n    timeoutId = setTimeout(doLater, waitMilliseconds);\n\n    if (shouldCallNow) {\n      func.apply(context, args);\n    }\n  }\n\n  debouncedFunction.cancel = function() {\n    if (timeoutId !== undefined) {\n      clearTimeout(timeoutId);\n    }\n  }\n\n  return debouncedFunction;\n}\n"],"names":["debounce","func","waitMilliseconds","options","isImmediate","timeoutId","debouncedFunction","args","context","this","shouldCallNow","undefined","clearTimeout","setTimeout","apply","cancel"],"mappings":"SAcgBA,EACdC,EACAC,EAAmB,GACnBC,EAAmB,CACjBC,aAAa,IAGf,IAAIC,EAEJ,MAAMC,EAAoB,YAAwCC,GAChE,MAAMC,EAAUC,KASVC,EAAgBP,EAAQC,kBAA6BO,IAAdN,OAE3BM,IAAdN,GACFO,aAAaP,GAGfA,EAAYQ,WAbI,WACdR,OAAYM,EACPR,EAAQC,aACXH,EAAKa,MAAMN,EAASD,IAUQL,GAE5BQ,GACFT,EAAKa,MAAMN,EAASD,IAUxB,OANAD,EAAkBS,OAAS,gBACPJ,IAAdN,GACFO,aAAaP,IAIVC"}